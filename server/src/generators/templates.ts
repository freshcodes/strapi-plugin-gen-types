import type { Core } from '@strapi/strapi'
import type { UploadPluginConfig } from '../types/upload'
import { escapeStringForTypeScript } from '../utils/strings'

/**
 * Generate file header with imports
 */
export function generateFileHeader(): string {
  return `// Auto-generated types from Strapi
// Do not edit this file manually

import type { API } from '@strapi/client'

`
}

/**
 * Get image format keys from Strapi's upload plugin config
 */
export function getImageFormatKeys(strapi: Core.Strapi): string[] {
  try {
    // Get upload plugin config directly from Strapi
    const uploadConfig = strapi.config.get('plugin::upload') as UploadPluginConfig
    const breakpoints = uploadConfig?.breakpoints || {}

    // Always include thumbnail, then add configured breakpoints
    const formatKeys = ['thumbnail', ...Object.keys(breakpoints)]

    console.log('📐 Found image format keys:', formatKeys)
    return formatKeys
  } catch (error: unknown) {
    const message = error instanceof Error ? error.message : String(error)
    console.warn('⚠️  Could not load upload plugin config, using defaults:', message)
    // Fallback to defaults
    return ['thumbnail', 'xs', 'sm', 'md', 'lg', 'xl']
  }
}

/**
 * Generate base Strapi types
 */
export function generateBaseTypes(strapi: Core.Strapi): string {
  const formatKeys = getImageFormatKeys(strapi)
  const formatKeysString = formatKeys
    .map((key) => `  | '${escapeStringForTypeScript(key)}'`)
    .join('\n')

  return `// Base Strapi Types

// Image format keys - generated from upload plugin config
export type StrapiImageFormatKey =
${formatKeysString}

export interface StrapiImageFormat {
  name: string
  hash: string
  ext: string
  mime: string
  path: string | null
  width: number
  height: number
  size: number
  sizeInBytes: number
  url: string
}

export interface StrapiBaseFile extends API.Document {
  id: number
  name: string
  alternativeText: string | null
  caption: string | null
  hash: string
  ext: string
  mime: string
  size: number
  url: string
  previewUrl: string | null
  provider: string
  createdAt: string
  updatedAt: string
}

export interface StrapiFile extends StrapiBaseFile {
  width: null
  height: null
  formats: null
}

export interface StrapiImage extends StrapiBaseFile {
  width: number
  height: number
  formats: Partial<Record<StrapiImageFormatKey, StrapiImageFormat>>
  provider_metadata: unknown | null
}

export interface StrapiUser extends API.Document {
  id: number
  username: string | null
  email: string | null
  provider: string | null
  confirmed: boolean | null
  blocked: boolean | null
  role: StrapiRole | null
}

export interface StrapiRole extends API.Document {
  id: number
  name: string | null
  description: string | null
  type: string | null
}

export type StrapiMarkdownField = string

// Rich Text Blocks Types
export interface StrapiRichTextBlocksText {
  type: 'text'
  text: string
  bold?: boolean
  italic?: boolean
  underline?: boolean
  strikethrough?: boolean
  code?: boolean
}

export interface StrapiRichTextBlocksLink {
  type: 'link'
  url: string
  children: StrapiRichTextBlocksNode[]
}

export interface StrapiRichTextBlocksImage {
  type: 'image'
  image: StrapiImage
  children: StrapiRichTextBlocksNode[]
}

export interface StrapiRichTextBlocksParagraph {
  type: 'paragraph'
  children: StrapiRichTextBlocksNode[]
}

export interface StrapiRichTextBlocksHeading {
  type: 'heading'
  level: 1 | 2 | 3 | 4 | 5 | 6
  children: StrapiRichTextBlocksNode[]
}

export interface StrapiRichTextBlocksList {
  type: 'list'
  format: 'ordered' | 'unordered'
  children: StrapiRichTextBlocksListItem[]
}

export interface StrapiRichTextBlocksListItem {
  type: 'list-item'
  children: StrapiRichTextBlocksNode[]
}

export interface StrapiRichTextBlocksQuote {
  type: 'quote'
  children: StrapiRichTextBlocksNode[]
}

export interface StrapiRichTextBlocksCode {
  type: 'code'
  language?: string
  children: StrapiRichTextBlocksNode[]
}

export type StrapiRichTextBlocksNode =
  | StrapiRichTextBlocksText
  | StrapiRichTextBlocksLink
  | StrapiRichTextBlocksImage
  | StrapiRichTextBlocksParagraph
  | StrapiRichTextBlocksHeading
  | StrapiRichTextBlocksList
  | StrapiRichTextBlocksListItem
  | StrapiRichTextBlocksQuote
  | StrapiRichTextBlocksCode

`
}
